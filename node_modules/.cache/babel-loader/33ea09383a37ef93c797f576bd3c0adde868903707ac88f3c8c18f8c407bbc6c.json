{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-blank/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SynapseReadApp from './SynapseReadApp';\n\n// Initialize with default settings\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSettings = {\n  fixation: 0.5,\n  opacity: 1.0,\n  speed: 2.5,\n  maxWordsPerChunk: 10,\n  readingMode: 'chunk'\n};\nconst defaultText = \"Welcome to SynapseRead! This is a demo text to show how the enhanced reading interface works. You can upload your own text or paste content here to start reading with enhanced visualization.\";\nexport default function App() {\n  _s();\n  const [settings, setSettings] = useState(defaultSettings);\n  const handleSummarize = () => console.log(\"Summarize clicked\");\n  const handleExplain = text => console.log(\"Explain clicked\", text);\n  const handleBuildVocabulary = text => console.log(\"Build vocabulary clicked\", text);\n  const handleGenerateQuestions = text => console.log(\"Generate questions clicked\", text);\n  const handleSimplify = text => console.log(\"Simplify clicked\", text);\n  const handleRephrase = text => console.log(\"Rephrase clicked\", text);\n  const handleTranslate = text => console.log(\"Translate clicked\", text);\n  const handleAnalyzeSentiment = text => console.log(\"Analyze sentiment clicked\", text);\n  const handleGetContextInfo = text => console.log(\"Get context info clicked\", text);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\",\n      children: /*#__PURE__*/_jsxDEV(SynapseReadApp, {\n        text: defaultText,\n        settings: settings,\n        onSettingsChange: setSettings,\n        onSummarize: handleSummarize,\n        onExplainSelection: handleExplain,\n        onBuildVocabulary: handleBuildVocabulary,\n        onGenerateStudyQuestions: handleGenerateQuestions,\n        onSimplifyText: handleSimplify,\n        onRephraseSelectedText: handleRephrase,\n        onTranslateSelectedText: handleTranslate,\n        onAnalyzeSentiment: handleAnalyzeSentiment,\n        onGetContextualInfo: handleGetContextInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tBZXmfLPaTWmKkZlV6093cfItL4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SynapseReadApp","jsxDEV","_jsxDEV","defaultSettings","fixation","opacity","speed","maxWordsPerChunk","readingMode","defaultText","App","_s","settings","setSettings","handleSummarize","console","log","handleExplain","text","handleBuildVocabulary","handleGenerateQuestions","handleSimplify","handleRephrase","handleTranslate","handleAnalyzeSentiment","handleGetContextInfo","className","children","onSettingsChange","onSummarize","onExplainSelection","onBuildVocabulary","onGenerateStudyQuestions","onSimplifyText","onRephraseSelectedText","onTranslateSelectedText","onAnalyzeSentiment","onGetContextualInfo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/codespaces-blank/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SynapseReadApp from './SynapseReadApp';\n\n// Initialize with default settings\nconst defaultSettings = {\n  fixation: 0.5,\n  opacity: 1.0,\n  speed: 2.5,\n  maxWordsPerChunk: 10,\n  readingMode: 'chunk'\n};\n\nconst defaultText = \"Welcome to SynapseRead! This is a demo text to show how the enhanced reading interface works. You can upload your own text or paste content here to start reading with enhanced visualization.\";\n\nexport default function App() {\n  const [settings, setSettings] = useState(defaultSettings);\n\n  const handleSummarize = () => console.log(\"Summarize clicked\");\n  const handleExplain = (text) => console.log(\"Explain clicked\", text);\n  const handleBuildVocabulary = (text) => console.log(\"Build vocabulary clicked\", text);\n  const handleGenerateQuestions = (text) => console.log(\"Generate questions clicked\", text);\n  const handleSimplify = (text) => console.log(\"Simplify clicked\", text);\n  const handleRephrase = (text) => console.log(\"Rephrase clicked\", text);\n  const handleTranslate = (text) => console.log(\"Translate clicked\", text);\n  const handleAnalyzeSentiment = (text) => console.log(\"Analyze sentiment clicked\", text);\n  const handleGetContextInfo = (text) => console.log(\"Get context info clicked\", text);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <SynapseReadApp \n          text={defaultText}\n          settings={settings}\n          onSettingsChange={setSettings}\n          onSummarize={handleSummarize}\n          onExplainSelection={handleExplain}\n          onBuildVocabulary={handleBuildVocabulary}\n          onGenerateStudyQuestions={handleGenerateQuestions}\n          onSimplifyText={handleSimplify}\n          onRephraseSelectedText={handleRephrase}\n          onTranslateSelectedText={handleTranslate}\n          onAnalyzeSentiment={handleAnalyzeSentiment}\n          onGetContextualInfo={handleGetContextInfo}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG;EACtBC,QAAQ,EAAE,GAAG;EACbC,OAAO,EAAE,GAAG;EACZC,KAAK,EAAE,GAAG;EACVC,gBAAgB,EAAE,EAAE;EACpBC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,gMAAgM;AAEpN,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACI,eAAe,CAAC;EAEzD,MAAMW,eAAe,GAAGA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAC9D,MAAMC,aAAa,GAAIC,IAAI,IAAKH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,IAAI,CAAC;EACpE,MAAMC,qBAAqB,GAAID,IAAI,IAAKH,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,IAAI,CAAC;EACrF,MAAME,uBAAuB,GAAIF,IAAI,IAAKH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,IAAI,CAAC;EACzF,MAAMG,cAAc,GAAIH,IAAI,IAAKH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,IAAI,CAAC;EACtE,MAAMI,cAAc,GAAIJ,IAAI,IAAKH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,IAAI,CAAC;EACtE,MAAMK,eAAe,GAAIL,IAAI,IAAKH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,IAAI,CAAC;EACxE,MAAMM,sBAAsB,GAAIN,IAAI,IAAKH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEE,IAAI,CAAC;EACvF,MAAMO,oBAAoB,GAAIP,IAAI,IAAKH,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEE,IAAI,CAAC;EAEpF,oBACEhB,OAAA;IAAKwB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtCzB,OAAA;MAAKwB,SAAS,EAAC,8CAA8C;MAAAC,QAAA,eAC3DzB,OAAA,CAACF,cAAc;QACbkB,IAAI,EAAET,WAAY;QAClBG,QAAQ,EAAEA,QAAS;QACnBgB,gBAAgB,EAAEf,WAAY;QAC9BgB,WAAW,EAAEf,eAAgB;QAC7BgB,kBAAkB,EAAEb,aAAc;QAClCc,iBAAiB,EAAEZ,qBAAsB;QACzCa,wBAAwB,EAAEZ,uBAAwB;QAClDa,cAAc,EAAEZ,cAAe;QAC/Ba,sBAAsB,EAAEZ,cAAe;QACvCa,uBAAuB,EAAEZ,eAAgB;QACzCa,kBAAkB,EAAEZ,sBAAuB;QAC3Ca,mBAAmB,EAAEZ;MAAqB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CAjCuBD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}